{"cells": [{"cell_type": "markdown", "metadata": {}, "source": ["# Automated Machine Learning for Lightweight Concrete with OPS and Natural Fibres"]}, {"cell_type": "code", "execution_count": null, "metadata": {}, "outputs": [], "source": ["import pandas as pd\n", "from sklearn.preprocessing import LabelEncoder\n", "\n", "# Experimental Data\n", "data = {\n", "    \"OPS_Replacement(%)\": [20]*6 + [30]*6 + [40]*6 + [50]*6 + [60]*6,\n", "    \"Fibre\": [\"CO\", \"HE\", \"BA\", \"KE\", \"JU\", \"FX\"] * 5,\n", "    \"Stress\": [\n", "        38.0036, 36.0356, 30.7876, 26.7860, 32.7228, 33.3460,\n", "        33.0836, 37.4296, 28.6556, 27.9340, 25.0476, 27.5240,\n", "        28.5408, 25.4740, 26.9664, 22.3908, 24.4572, 19.6520,\n", "        17.8316, 26.8352, 23.6208, 22.7844, 21.1116, 19.8160,\n", "        23.7028, 24.1620, 19.1600, 22.0300, 21.8168, 20.0948\n", "    ],\n", "    \"Split\": [\n", "        4.4347, 4.2955, 3.9084, 3.5951, 4.0540, 4.1001,\n", "        4.0807, 4.3944, 3.7437, 3.6868, 3.4533, 3.6542,\n", "        3.7346, 3.4884, 3.6096, 3.2286, 3.4042, 2.9855,\n", "        2.8163, 3.5991, 3.3339, 3.2625, 3.1166, 3.0004,\n", "        3.3408, 3.3795, 2.9404, 3.1973, 3.1787, 3.0257\n", "    ],\n", "    \"Flexure\": [\n", "        4.3153, 4.2021, 3.8841, 3.6229, 4.0043, 4.0422,\n", "        4.0263, 4.2826, 3.7472, 3.6997, 3.5033, 3.6724,\n", "        3.7397, 3.5330, 3.6350, 3.3123, 3.4618, 3.1031,\n", "        2.9559, 3.6262, 3.4021, 3.3413, 3.2163, 3.1161,\n", "        3.4080, 3.4408, 3.0640, 3.2855, 3.2696, 3.1379\n", "    ],\n", "    \"Sorptivity\": [\n", "        0.14, 0.13, 0.12, 0.11, 0.12, 0.15,\n", "        0.156, 0.168, 0.144, 0.132, 0.144, 0.18,\n", "        0.182, 0.169, 0.156, 0.143, 0.156, 0.195,\n", "        0.196, 0.182, 0.168, 0.154, 0.168, 0.21,\n", "        0.224, 0.208, 0.192, 0.176, 0.192, 0.24\n", "    ]\n", "}\n", "\n", "df = pd.DataFrame(data)\n", "le = LabelEncoder()\n", "df[\"Fibre\"] = le.fit_transform(df[\"Fibre\"])\n", "df.head()"]}, {"cell_type": "code", "execution_count": null, "metadata": {}, "outputs": [], "source": ["# Import PyCaret within the code block\n", "from pycaret.regression import setup, compare_models, finalize_model, evaluate_model\n", "\n", "targets = [\"Stress\", \"Split\", \"Flexure\", \"Sorptivity\"]\n", "models = {}\n", "\n", "for target in targets:\n", "    exp = setup(data=df, target=target, session_id=123, silent=True, verbose=False)\n", "    best_model = compare_models()\n", "    final_model = finalize_model(best_model)\n", "    models[target] = final_model\n", "    print(f\"Best model for {target}:\")\n", "    print(best_model)"]}, {"cell_type": "code", "execution_count": null, "metadata": {}, "outputs": [], "source": ["for target in targets:\n", "    print(f\"Evaluating: {target}\")\n", "    evaluate_model(models[target])"]}], "metadata": {"kernelspec": {"display_name": "Python 3", "language": "python", "name": "python3"}, "language_info": {"name": "python", "version": "3.8"}}, "nbformat": 4, "nbformat_minor": 5}
